---
//import {insta} from "../api/tes";
//insta()
//

//const data = await fetch('/api/insta');
//const jsw = await data.json();
//console.log(jsw)
const Insta = import.meta.env.PUBLIC_API;
const Token = import.meta.env.SECRET_PASSWORD;
const { data } = await fetch(Insta + Token).then(response => response.json());
const mapped = Object.keys(data).map(key => data[key]);
const satuTiga = mapped.slice(0,5);
---

<section class="mt-20 md:mt-24">
  <div class="mb-8 text-center">
    <h2
      class="font-bold leading-tighter tracking-tighter mb-4 font-heading"
    >
      Our Latest Work
    </h2>
  </div>

  <div
    class="flex scrollWidth overflow-x-scroll overflow-none snap-mandatory scroll-smooth"
  >
    {
      satuTiga.map(({ media_url, caption }) => (
        <div x-intersect="$el.classList.add('roll-in-blurred-left')" class="flex flex-wrap align-center -mx-4 ">
          <div class="w-full m-12 p-4 ">
            <div class="frame w-64 hover:animate-bounce">
              <span class="relative flex h-3 w-3">
                <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-yellow-400 opacity-75" />
                <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-yellow-400 opacity-75" />

                <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-yellow-400 opacity-75" />

                <span class="relative inline-flex rounded-full h-3 w-3 bg-yellow-500" />
              </span>
              <img src={media_url} class="rounded w-64 xx " />
            
            </div>
			<div class="card-body mt-12 text-center text-2xl">
                <p>How to park your car at your garage?</p>
                
              </div>
          </div>
        </div>
      ))
    }
  </div>
</section>

<style>
  .scrollWidth {
    scrollbar-width: none;
    margin: 0 -6%;
  }
  .scrollWidth::-webkit-scrollbar {
    display: none;
  }
  p {
		color: var(--gray-100);
	}
  .xx {
    border-radius: 50px;
    background: var(--gray-700);
    box-shadow: 5px 5px 30px var(--gray-700),
      -5px -5px 30px var(--accent-overlay);
  }

  /* ----------------------------------------------
 * Generated by Animista on 2023-3-5 23:9:7
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation roll-in-blurred-left
 * ----------------------------------------
 */
@-webkit-keyframes roll-in-blurred-left {
  0% {
    -webkit-transform: translateX(-1000px) rotate(-720deg);
            transform: translateX(-1000px) rotate(-720deg);
    -webkit-filter: blur(50px);
            filter: blur(50px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0) rotate(0deg);
            transform: translateX(0) rotate(0deg);
    -webkit-filter: blur(0);
            filter: blur(0);
    opacity: 1;
  }
}
@keyframes roll-in-blurred-left {
  0% {
    -webkit-transform: translateX(-1000px) rotate(-720deg);
            transform: translateX(-1000px) rotate(-720deg);
    -webkit-filter: blur(50px);
            filter: blur(50px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0) rotate(0deg);
            transform: translateX(0) rotate(0deg);
    -webkit-filter: blur(0);
            filter: blur(0);
    opacity: 1;
  }
}

.roll-in-blurred-left {
	-webkit-animation: roll-in-blurred-left 1.65s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
	        animation: roll-in-blurred-left 1.65s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
}
</style>
